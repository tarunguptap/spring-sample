<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- Scan for spring annotated components -->
	<context:component-scan base-package="com.spring">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- Process annotations on registered beans like @Autowired... -->
	<!-- <context:annotation-config /> -->
	
	<http pattern="/assets/**" security="none" />
	<http pattern="/login" security="none"/>
	<!-- HTTP basic authentication in Spring Security -->
	<http auto-config="true">
		<intercept-url pattern="/api/**" access="ROLE_API" />
		<intercept-url pattern="/favicon.ico" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/" access="ROLE_ANONYMOUS"/>
		<intercept-url pattern="/**"  access="ROLE_ADMIN" />
		<access-denied-handler error-page="/login?action=authFail"/>
		
		<!--By adding authentication-failure-handler-ref the page corresponding to defaultTargetUrl will be sent and authentication-failure-url will not work in this case.
		but if we dont specify the authentication-failure-handler-ref then authentication-failure-url will work. In short the authentication-failure-handler-ref has precedence 
		over the authentication-failure-url  -->
		<form-login login-page="/login" default-target-url="/userAdmin" authentication-failure-url="/login?action=authFail" 
			authentication-failure-handler-ref="loginAuthenticationFailureHandler"/>
		<logout logout-success-url="/login?logout=loginFail"/>
	</http>
	
	<beans:bean id="loginAuthenticationFailureHandler" class="com.spring.security.handler.LoginAuthenticationFailureHandler">
		<beans:property name="defaultTargetUrl" value="login?action=authFail" />
	</beans:bean>
	
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="sha">
				<salt-source ref="saltSource"/>
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	
	<!--<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>-->
	
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse">
			<beans:value>getId</beans:value>
		</beans:property>
	</beans:bean>
</beans:beans>