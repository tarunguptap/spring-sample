<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- Scan for spring annotated components -->
	<context:component-scan base-package="com.spring">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- Process annotations on registered beans like @Autowired... -->
	<context:annotation-config />
	
	<http pattern="/assets/**" security="none" />
	<http pattern="/login" security="none"/>
	<!-- HTTP basic authentication in Spring Security -->
	<http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">
		<intercept-url pattern="/api/**" access="ROLE_API" />
		<intercept-url pattern="/favicon.ico" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/" access="ROLE_ANONYMOUS"/>
		<intercept-url pattern="/**"  access="ROLE_ADMIN" />
		<access-denied-handler error-page="/login?action=authFail"/>
		
		<custom-filter position="FORM_LOGIN_FILTER" ref="customUsernamePasswordAuthenticationFilter"/>
		<logout logout-success-url="/login?logout=loginFail"/>
	</http>
	
	<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
	 	<beans:property name="loginFormUrl" value="/login"/>
	</beans:bean>
	
	<!-- <beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
	 <beans:property name="defaultTargetUrl" value="/login.html"/>
	</beans:bean>
	<beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
	 <beans:property name="defaultFailureUrl" value="/login.html?login_error=true"/>
	</beans:bean> -->
	
	<beans:bean id="successHandler" class="com.spring.security.handler.LoginAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="login?action=authFail" />
	</beans:bean>
	
	<beans:bean id="failureHandler" class="com.spring.security.handler.LoginAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="login?action=authFail" />
	</beans:bean>
	
	<beans:bean id="customUsernamePasswordAuthenticationFilter"
	     class="com.spring.security.filter.CustomUsernamePasswordAuthenticationFilter" >
		 <beans:property name="authenticationManager" ref="authenticationManager"/>
		 <beans:property name="authenticationFailureHandler" ref="failureHandler"/>
		 <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
	</beans:bean>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>
	
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="passwordEncoder">
            <beans:bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
        </beans:property>
        <beans:property name="saltSource" ref="saltSource"/>
        <beans:property name="userDetailsService" ref="userDetailsService" />
    </beans:bean>
	
	<!--<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>-->
	
	<!--<beans:bean id="passwordEncoder" 
    	class="org.springframework.security.crypto.password.StandardPasswordEncoder">
    	 <constructor-arg value="#{someotherBean.somePropertyWithAGetterMethod"/>
    </beans:bean> -->
	
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse">
			<beans:value>getId</beans:value>
		</beans:property>
	</beans:bean>
</beans:beans>